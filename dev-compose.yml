version: "3.4"
services:
  cloud-platform.dev:
    container_name: cloud-platform.dev
    build:
      context: ./
      dockerfile: ./.devcontainer/Dockerfile
    environment:
      DOCKER_HOST: unix:///var/run/docker-host.sock
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: S3RVER
      AWS_SECRET_ACCESS_KEY: S3RVER
    command: sleep infinity

  cloud-platform.cognito:
    container_name: cloud-platform.cognito
    build:
      context: ./submodules/cognito-local
      dockerfile: Dockerfile
    ports:
      - "9229:9229"
    volumes:
      - ./.devcontainer/.cognito:/cognito-local/.cognito
      - ./submodules/cognito-local/src:/cognito-local/src

  cloud-platform.ses:
    container_name: cloud-platform.ses
    build:
      context: ./submodules/aws-ses-local
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    volumes:
      - ./.devcontainer/.ses/output:/aws-ses-local/output
      - ./.devcontainer/.ses/email-templates:/aws-ses-local/email-templates
      - ./submodules/aws-ses-local/src:/aws-ses-local/src
      - ./submodules/aws-ses-local/src/templates:/aws-ses-local/build/templates

  cloud-platform.sfn:
    container_name: cloud-platform.sfn
    image: amazon/aws-stepfunctions-local
    ports:
      - "8083:8083"
    environment:
      AWS_ACCOUNT_ID: 101010101010
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: S3RVER
      AWS_SECRET_ACCESS_KEY: S3RVER
      # WAIT_TIME_SCALE: VALUE
      LAMBDA_ENDPOINT: http://cloud-platform.sls:3002
      # BATCH_ENDPOINT: VALUE
      DYNAMODB_ENDPOINT: http://cloud-platform.dynamodb:8000
      # ECS_ENDPOINT: VALUE
      # GLUE_ENDPOINT: VALUE
      # SAGE_MAKER_ENDPOINT: VALUE
      # SQS_ENDPOINT: VALUE
      SNS_ENDPOINT: http://cloud-platform.sls:4002

  cloud-platform.mysql:
    container_name: cloud-platform.mysql
    image: mysql:5.7
    ports:
      - "3306:3306"
    volumes:
      - ./.devcontainer/mysql/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: local-root-password

  cloud-platform.dynamodb:
    container_name: cloud-platform.dynamodb
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - ./.devcontainer/.db:/home/dynamodblocal/db
    command:
      [
        "-jar",
        "DynamoDBLocal.jar",
        "-sharedDb",
        "-dbPath",
        "/home/dynamodblocal/db",
      ]

  cloud-platform.dynamodb.admin:
    container_name: cloud-platform.dynamodb.admin
    image: aaronshaf/dynamodb-admin
    ports:
      - 8001:8001
    environment:
      DYNAMO_ENDPOINT: http://platform.dynamodb:8000

  cloud-platform.sls:
    container_name: cloud-platform.sls
    build:
      context: .
      dockerfile: ./.devcontainer/sls-local.Dockerfile
    tty: true
    stdin_open: true
    ports:
      - "3001:3001"
      - "3002:3002"
      - "4002:4002"
      - "4569:4569"
    environment:
      AWS_ACCOUNT_ID: 101010101010
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: S3RVER
      AWS_SECRET_ACCESS_KEY: S3RVER
    command: sh -c "npm run dev:sls"
    volumes:
      - .:/sls-offline

  cloud-platform.web:
    container_name: cloud-platform.web
    image: node:14
    ports:
      - "8080:8080"
    working_dir: /vite-client
    command: sh -c "npm run dev:client:docker"
    volumes:
      - .:/vite-client

  cloud-platform.storybooks:
    container_name: cloud-platform.storybooks
    image: node:14
    ports:
      - "6006:6006"
    working_dir: /workspace
    command: sh -c "npm run deploy-storybook:local && npx http-server -p 6006 storybooks"
    volumes:
      - .:/workspace

  cloud-platform.user:
    container_name: cloud-platform.user
    build:
      args:
        Port: 5000
      context: .
      dockerfile: ./.devcontainer/local-service.Dockerfile
    ports:
      - "5000:5000"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      AWS_ACCESS_KEY_ID: S3RVER
      AWS_SECRET_ACCESS_KEY: S3RVER
    command: sh -c "dockerize -wait tcp://cloud-platform.mysql:3306 -timeout 300s -wait-retry-interval 3s dotnet User.Api.dll"
    volumes:
      - ./services/User/Api:/Api
      - ./.devcontainer/vsdbg:/vsdbg
